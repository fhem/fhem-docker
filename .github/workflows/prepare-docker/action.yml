name: Reusable composit workflow which prepares caching, docker build & login for later push 
description: build images and push them to registries
outputs:
  VARIANT_FHEM:
    description: "Combined string, with FHEM Version and latest svn commit id"
    value: ${{ steps.svnVars.outputs.VARIANT_FHEM }}
  FHEM_REVISION_LATEST:
    description: "The revision Number pulled from SVN"
    value: ${{ steps.svnVars.outputs.FHEM_REVISION_LATEST }}
inputs:
  DOCKER_HUB_USERNAME:
    description: "username on dockerhub to which the access token belongs"
    required: false
  DOCKER_HUB_ACCESS_TOKEN:
    description: "Personal access token from docker hub"
    required: false
  GHCR_ACCESS_TOKEN:
    description: "Personal access token from docker hub"
    required: false
  GHCR_OWNER: 
    description: "ownername on github packages to which the access token belongs"
    required: false
  DOCKERFILE:
    description: "name of the dockerfile, used for identify the cache"
    required: false
    default: "Dockerfile"

runs:
  using: "composite"
  steps:
    - name: Docker Setup QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: tonistiigi/binfmt:latest
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      if: github.event_name != 'pull_request' && inputs.DOCKER_HUB_USERNAME != null && inputs.DOCKER_HUB_ACCESS_TOKEN != null 
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.DOCKER_HUB_USERNAME }}
        password: ${{ inputs.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request' && inputs.GHCR_OWNER != null && inputs.GHCR_ACCESS_TOKEN != null
      uses: docker/login-action@v3 
      with:
        registry: ghcr.io
        username: ${{ inputs.GHCR_OWNER }}
        password: ${{ inputs.GHCR_ACCESS_TOKEN }}
